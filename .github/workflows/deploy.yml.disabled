name: Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

env:
  ELIXIR_VERSION: 1.19-rc
  OTP_VERSION: 28.0
  MIX_ENV: prod

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}

    - name: Cache deps
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: prod-deps-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          prod-deps-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-

    - name: Install dependencies
      run: |
        mix deps.get --only prod
        mix deps.compile

    - name: Compile assets
      run: |
        mix assets.setup
        mix assets.deploy

    - name: Build release
      run: mix release

    - name: Setup Fly.io
      uses: superfly/flyctl-actions/setup-flyctl@master

    - name: Deploy to Fly.io
      run: flyctl deploy --remote-only
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    
    steps:
    - name: Notify success
      if: needs.deploy.result == 'success'
      run: echo "✅ Deployment successful!"
      
    - name: Notify failure
      if: needs.deploy.result == 'failure'
      run: |
        echo "❌ Deployment failed!"
        exit 1