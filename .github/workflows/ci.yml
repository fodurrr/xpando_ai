name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  MIX_ENV: test
  ELIXIR_VERSION: 1.19-rc
  OTP_VERSION: 28.0

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: xpando_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}

    - name: Cache deps
      uses: actions/cache@v3
      id: cache-deps
      with:
        path: |
          deps
          _build
        key: deps-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          deps-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-

    - name: Install dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        mix deps.get
        mix deps.compile

    - name: Check formatting
      run: mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

    - name: Compile
      run: mix compile --warnings-as-errors

    - name: Setup Ash database
      run: |
        MIX_TEST_PARTITION=1 mix ash.setup
        MIX_TEST_PARTITION=2 mix ash.setup
        MIX_TEST_PARTITION=3 mix ash.setup
        MIX_TEST_PARTITION=4 mix ash.setup
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/xpando_test

    - name: Run tests
      run: mix test
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/xpando_test

  dialyzer:
    name: Dialyzer
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: xpando_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}

    - name: Cache deps and PLT
      uses: actions/cache@v3
      id: cache-deps
      with:
        path: |
          deps
          _build
          priv/plts
        key: dialyzer-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          dialyzer-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-

    - name: Install dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        mix deps.get
        mix deps.compile

    - name: Setup Ash database
      run: |
        MIX_TEST_PARTITION=1 mix ash.setup
        MIX_TEST_PARTITION=2 mix ash.setup  
        MIX_TEST_PARTITION=3 mix ash.setup
        MIX_TEST_PARTITION=4 mix ash.setup
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/xpando_test

    - name: Run Dialyzer
      run: mix dialyzer

  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}

    - name: Cache deps
      uses: actions/cache@v3
      id: cache-deps
      with:
        path: |
          deps
          _build
        key: security-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          security-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-

    - name: Install dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        mix deps.get
        mix deps.compile

    - name: Check for vulnerable dependencies
      run: mix deps.audit

    - name: Run security checks
      run: mix sobelow --config