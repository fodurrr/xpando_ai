name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  MIX_ENV: test
  # Use stable, widely adopted versions
  ELIXIR_VERSION: '1.18.1'
  OTP_VERSION: '27.2'

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    # Use a matrix to run different checks in parallel
    strategy:
      fail-fast: false
      matrix:
        check:
          # Check names are descriptive
          - lint          # Runs formatter, credo, and security checks
          - test          # Runs the test suite against a database
          - dialyzer      # Runs static analysis

    # The PostgreSQL service is available to all jobs in the matrix
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: xpando_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: üíß Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ env.ELIXIR_VERSION }}
        otp-version: ${{ env.OTP_VERSION }}

    - name: üì¶ Cache dependencies
      uses: actions/cache@v4
      id: deps-cache
      with:
        path: |
          deps
          _build
        key: deps-v1-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          deps-v1-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-

    - name: ‚öôÔ∏è Install dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
        if [ "${{ steps.deps-cache.outputs.cache-hit }}" != "true" ]; then
          mix deps.compile
        fi

    - name: üìù Run Linting & Security Checks
      if: matrix.check == 'lint'
      run: |
        mix format --check-formatted
        mix credo --strict
        mix deps.audit
        mix sobelow --root apps/xpando_web --skip

    - name: üß™ Run Tests
      if: matrix.check == 'test'
      env:
        # The postgres service is available on localhost because it's running on the same docker network
        DATABASE_URL: "ecto://postgres:postgres@localhost:5432/xpando_test"
      run: |
        # Ensure project is compiled before database setup
        mix deps.compile
        mix compile
        # Set up the test database with proper setup
        MIX_ENV=test mix ash.setup
        # Run tests
        mix test

    # - name: üîé Cache Dialyzer PLT
    #   if: matrix.check == 'dialyzer'
    #   uses: actions/cache@v4
    #   id: plt-cache
    #   with:
    #     path: priv/plts
    #     key: plt-v1-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-${{ hashFiles('**/mix.lock') }}
    #     restore-keys: |
    #       plt-v1-${{ runner.os }}-${{ env.OTP_VERSION }}-${{ env.ELIXIR_VERSION }}-

    # - name: üßê Run Dialyzer
    #   if: matrix.check == 'dialyzer'
    #   run: mix dialyzer
